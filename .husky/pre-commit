#!/bin/bash

# Package manager: choose between npm, yarn, pnpm
PKG_MGR=pnpm 

# Define color codes
red='\033[1;31m'
green='\033[1;32m'
yellow='\033[1;33m'
blue='\033[1;34m'
magenta='\033[1;35m'
cyan='\033[1;36m'
gray='\033[1;90m'
clear='\033[0m'
light_red='\033[1;91m'
light_green='\033[1;92m'
light_yellow='\033[1;93m'
light_blue='\033[1;94m'
light_magenta='\033[1;95m'
light_cyan='\033[1;96m'
white='\033[1;97m'

# Enhanced progress bar function
progress_bar() {
  local pid=$1
  local delay=0.1
  local spinner=('⠋' '⠙' '⠹' '⠸' '⠼' '⠴' '⠦' '⠧' '⠇' '⠏')
  local spinner_idx=0
  local elapsed_time=0
  local progress_char="▇"
  local width=50
  local start_time=$(date +%s)

  while kill -0 $pid 2>/dev/null; do
    local current_time=$(date +%s)
    elapsed_time=$((current_time - start_time))

    local progress=$((elapsed_time * 100 / 60))
    if [ $progress -gt 99 ]; then
      progress=99
    fi

    local elapsed=$((progress * width / 100))
    local spin=${spinner[$((spinner_idx % 10))]}
    spinner_idx=$((spinner_idx + 1))

    printf "${green}\r[${spin}] ["
    for ((i = 0; i < elapsed; i++)); do printf "${green}${progress_char}"; done
    for ((i = elapsed; i < width; i++)); do printf " "; done
    printf "] ${progress}%% (${elapsed_time}s)"
    sleep $delay
  done

  printf "${green}\r[✓] ["
  for ((i = 0; i < width; i++)); do printf "${progress_char}"; done
  printf "] 100%% (${elapsed_time}s)${clear}\n"
  echo -ne '\n'
}

# ASCII Art Banner
echo -e "
${green}
     _       _          _____           _ 
    | |_   _(_) ___ ___|  ___|   _  ___| |
 _  | | | | | |/ __/ _ \ |_ | | | |/ _ \ |
| |_| | |_| | | (_|  __/  _|| |_| |  __/ |
 \___/ \__,_|_|\___\___|_|   \__,_|\___|_|

${clear}
"

echo -e "Let's hope you are not ${red}DUMB${clear}!"
echo -ne '\n'

echo -e "${yellow}Using package manager: ${cyan}${PKG_MGR}${clear}"
echo -ne '\n'

# Run type checks
echo -e "${yellow}Running type checks...${clear}"
echo -ne '\n'
(${PKG_MGR} run types > types_output.log 2>&1) &
TYPES_PID=$!
progress_bar $TYPES_PID
wait $TYPES_PID
TYPES_EXIT=$?

echo -e "${yellow}Type check output:${clear}"
cat types_output.log

if [ $TYPES_EXIT -eq 0 ]; then
  echo -e "${green}Type checks passed...${clear} ✅"
else
  echo -e "${red}Type checks failed...${clear} ❌"
  exit $TYPES_EXIT
fi
echo -ne '\n'

# Run linting
echo -e "${yellow}Running linting...${clear}"
echo -ne '\n'
(${PKG_MGR} run lint > lint_output.log 2>&1) &
LINT_PID=$!
progress_bar $LINT_PID
wait $LINT_PID
LINT_EXIT=$?

echo -e "${yellow}Lint output:${clear}"
cat lint_output.log

if [ $LINT_EXIT -eq 0 ]; then
  echo -e "${green}Linting passed...${clear} ✅"
else
  echo -e "${red}Linting failed...${clear} ❌"
  exit $LINT_EXIT
fi
echo -ne '\n'

# Cleanup
rm -f types_output.log lint_output.log

# Final Message
echo -e "${yellow}Seems like you are a ${red}C${yellow}L${green}E${cyan}V${blue}E${magenta}R ${light_red}D${light_yellow}E${light_green}V${light_cyan}E${light_blue}L${light_magenta}O${light_red}P${light_yellow}E${light_green}R${clear} 👌"
echo -e "${green}GOOD TO GO${clear} 🚀🚀🚀"
